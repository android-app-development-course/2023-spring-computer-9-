// Generated by view binder compiler. Do not edit!
package com.example.cashbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cashbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import lecho.lib.hellocharts.view.LineChartView;

public final class StatisticsMonthBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changeMonth;

  @NonNull
  public final LinearLayout linearLayout0;

  @NonNull
  public final TextView mallM;

  @NonNull
  public final TextView minM;

  @NonNull
  public final LineChartView monthChart;

  @NonNull
  public final TextView moutM;

  private StatisticsMonthBinding(@NonNull ConstraintLayout rootView, @NonNull Button changeMonth,
      @NonNull LinearLayout linearLayout0, @NonNull TextView mallM, @NonNull TextView minM,
      @NonNull LineChartView monthChart, @NonNull TextView moutM) {
    this.rootView = rootView;
    this.changeMonth = changeMonth;
    this.linearLayout0 = linearLayout0;
    this.mallM = mallM;
    this.minM = minM;
    this.monthChart = monthChart;
    this.moutM = moutM;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StatisticsMonthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StatisticsMonthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.statistics_month, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StatisticsMonthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeMonth;
      Button changeMonth = ViewBindings.findChildViewById(rootView, id);
      if (changeMonth == null) {
        break missingId;
      }

      id = R.id.linearLayout0;
      LinearLayout linearLayout0 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout0 == null) {
        break missingId;
      }

      id = R.id.mallM;
      TextView mallM = ViewBindings.findChildViewById(rootView, id);
      if (mallM == null) {
        break missingId;
      }

      id = R.id.minM;
      TextView minM = ViewBindings.findChildViewById(rootView, id);
      if (minM == null) {
        break missingId;
      }

      id = R.id.monthChart;
      LineChartView monthChart = ViewBindings.findChildViewById(rootView, id);
      if (monthChart == null) {
        break missingId;
      }

      id = R.id.moutM;
      TextView moutM = ViewBindings.findChildViewById(rootView, id);
      if (moutM == null) {
        break missingId;
      }

      return new StatisticsMonthBinding((ConstraintLayout) rootView, changeMonth, linearLayout0,
          mallM, minM, monthChart, moutM);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

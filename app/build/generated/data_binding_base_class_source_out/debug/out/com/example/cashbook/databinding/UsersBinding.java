// Generated by view binder compiler. Do not edit!
package com.example.cashbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cashbook.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UsersBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout aboutBtn;

  @NonNull
  public final CircleImageView appImg;

  @NonNull
  public final CardView data;

  @NonNull
  public final TextView days;

  @NonNull
  public final TextView daysCount;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView property;

  @NonNull
  public final TextView propertyAmount;

  @NonNull
  public final CardView select;

  @NonNull
  public final RelativeLayout settings;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView transactions;

  @NonNull
  public final TextView transactionsCount;

  private UsersBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout aboutBtn,
      @NonNull CircleImageView appImg, @NonNull CardView data, @NonNull TextView days,
      @NonNull TextView daysCount, @NonNull TextView name, @NonNull TextView property,
      @NonNull TextView propertyAmount, @NonNull CardView select, @NonNull RelativeLayout settings,
      @NonNull Toolbar toolbar, @NonNull TextView transactions,
      @NonNull TextView transactionsCount) {
    this.rootView = rootView;
    this.aboutBtn = aboutBtn;
    this.appImg = appImg;
    this.data = data;
    this.days = days;
    this.daysCount = daysCount;
    this.name = name;
    this.property = property;
    this.propertyAmount = propertyAmount;
    this.select = select;
    this.settings = settings;
    this.toolbar = toolbar;
    this.transactions = transactions;
    this.transactionsCount = transactionsCount;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UsersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UsersBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.users, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UsersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_btn;
      RelativeLayout aboutBtn = ViewBindings.findChildViewById(rootView, id);
      if (aboutBtn == null) {
        break missingId;
      }

      id = R.id.app_img;
      CircleImageView appImg = ViewBindings.findChildViewById(rootView, id);
      if (appImg == null) {
        break missingId;
      }

      id = R.id.data;
      CardView data = ViewBindings.findChildViewById(rootView, id);
      if (data == null) {
        break missingId;
      }

      id = R.id.days;
      TextView days = ViewBindings.findChildViewById(rootView, id);
      if (days == null) {
        break missingId;
      }

      id = R.id.days_count;
      TextView daysCount = ViewBindings.findChildViewById(rootView, id);
      if (daysCount == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.property;
      TextView property = ViewBindings.findChildViewById(rootView, id);
      if (property == null) {
        break missingId;
      }

      id = R.id.property_amount;
      TextView propertyAmount = ViewBindings.findChildViewById(rootView, id);
      if (propertyAmount == null) {
        break missingId;
      }

      id = R.id.select;
      CardView select = ViewBindings.findChildViewById(rootView, id);
      if (select == null) {
        break missingId;
      }

      id = R.id.settings;
      RelativeLayout settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.transactions;
      TextView transactions = ViewBindings.findChildViewById(rootView, id);
      if (transactions == null) {
        break missingId;
      }

      id = R.id.transactions_count;
      TextView transactionsCount = ViewBindings.findChildViewById(rootView, id);
      if (transactionsCount == null) {
        break missingId;
      }

      return new UsersBinding((RelativeLayout) rootView, aboutBtn, appImg, data, days, daysCount,
          name, property, propertyAmount, select, settings, toolbar, transactions,
          transactionsCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
